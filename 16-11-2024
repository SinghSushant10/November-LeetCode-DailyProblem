#3254. Find the Power of K-Size Subarrays I

Input: nums = [1,2,3,4,3,2,5], k = 3

Output: [3,4,-1,-1,-1]

Explanation:

There are 5 subarrays of nums of size 3:

[1, 2, 3] with the maximum element 3.
[2, 3, 4] with the maximum element 4.
[3, 4, 3] whose elements are not consecutive.
[4, 3, 2] whose elements are not sorted.
[3, 2, 5] whose elements are not consecutive.


class Solution {
    public int[] resultsArray(int[] nums, int k) {
        //sliding window :  sub array ,fixed size 'k'
        int n=nums.length;
        int[] result = new int[n-k+1];
        //intialize the result array with -1
        Arrays.fill(result,-1);
        int count=1; //count of consecutive elements
        //preprocess the first window
        for(int i=1;i<k;i++){
            if(nums[i]==nums[i-1]+1){
                count++;
            }
            else{
                count=1;
            }
        }
        //check if the first window satisfies the condition 
        if(count==k){
            result[0]=nums[k-1];
        }
        int i=1;
        int j=k;
        //process the sliding window
        while(j<n){
            if(nums[j]==nums[j-1]+1){
                count++;
            }
            else{
                count=1;
            }
            if(count>=k){
                result[i]=nums[j];
            }
            i++;
            j++;
        }
        return result;
    }
}
